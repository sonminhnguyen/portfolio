import { EventInput } from '@fullcalendar/react';
import uniqueId from 'lodash/uniqueId';
import { startOfMonth, addDays, format, endOfMonth } from 'date-fns';

const today = new Date();
const firstDay = startOfMonth(today);
const lastDay = endOfMonth(today);
const todayStr = format(today, 'yyyy-MM-dd');

// console.log(todayStr);

export const INITIAL_EVENTS: EventInput[] = [
  {
    id: uniqueId(),
    title: 'üéä –°—Ç–∞—Ä—Ç–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞ –ø—Ä–æ–µ–∫—Ç–∞',
    allDay: true,
    start: format(firstDay, 'yyyy-MM-dd'),
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: 'üéâ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–∞',
    start: format(addDays(firstDay, 2), 'yyyy-MM-dd') + 'T10:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },

  {
    id: uniqueId(),
    title: '–û–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç—É.',
    start: format(addDays(firstDay, 3), 'yyyy-MM-dd') + 'T10:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞',
    start: format(addDays(firstDay, 3), 'yyyy-MM-dd') + 'T11:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: '–≠–∫–∑–∞–º–µ–Ω –ø—Ä–æ–¥—É–∫—Ç–∞',
    start: format(addDays(firstDay, 3), 'yyyy-MM-dd') + 'T12:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },

  {
    id: uniqueId(),
    title: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –¥–∏–∑–∞–π–Ω–µ —Å–µ—Ä–≤–∏—Å–æ–≤',
    start: format(addDays(firstDay, 5), 'yyyy-MM-dd') + 'T10:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: '–ú–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã',
    start: format(addDays(firstDay, 5), 'yyyy-MM-dd') + 'T11:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },

  {
    id: uniqueId(),
    title: '–û–±–∑–æ—Ä —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞',
    start: format(addDays(firstDay, 15), 'yyyy-MM-dd') + 'T14:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: '–û–±–∑–æ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
    start: format(addDays(firstDay, 15), 'yyyy-MM-dd') + 'T16:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },

  {
    id: uniqueId(),
    title: 'üíé –í—Å—Ç—Ä–µ—á–∞ –ø—Ä–æ–¥—É–∫—Ç–∞',
    start: todayStr + 'T09:00:00',
    end: todayStr + 'T10:30:00',
    message: null,
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: 'üë®‚Äçüíª –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ ',
    start: todayStr + 'T10:00:00',
    end: todayStr + 'T11:30:00',
    message: null,
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: 'üìñ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ä—É–∫–æ–≤–æ–¥—è—â–∏—Ö –∫–∞–¥—Ä–æ–≤',
    start: todayStr + 'T12:00:00',
    end: todayStr + 'T14:00:00',
    message: null,
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: '‚òïÔ∏è –ü–æ—Å–ª–µ–æ–±–µ–¥–µ–Ω–Ω–æ–µ —á–∞–µ–ø–∏—Ç–∏–µ',
    start: todayStr + 'T14:00:00',
    end: todayStr + 'T16:00:00',
    message: null,
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: '–ò–Ω—Ç–µ—Ä–≤—å—é –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤.',
    start: todayStr + 'T16:00:00',
    end: todayStr + 'T18:00:00',
    message: null,
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: 'üéâ –í—ã–ø—É—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–∞',
    allDay: true,
    start: format(lastDay, 'yyyy-MM-dd') + 'T14:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  },
  {
    id: uniqueId(),
    title: 'üî¨ –ü—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞',
    start: format(lastDay, 'yyyy-MM-dd') + 'T16:00:00',
    message: null,
    end: todayStr + 'T11:30:00',
    remindToGroup: null
  }
];
